
stm32l4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000104  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000288  08000290  00001290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000288  08000288  00001290  2**0
                  CONTENTS
  4 .ARM          00000000  08000288  08000288  00001290  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000288  08000290  00001290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000288  08000288  00001288  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800028c  0800028c  0000128c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001290  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001290  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000b7  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000006b  00000000  00000000  00001377  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000013e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00001430  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001199  00000000  00000000  0000145c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000004d5  00000000  00000000  000025f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004901  00000000  00000000  00002aca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000073cb  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000005c  00000000  00000000  00007410  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  0000746c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	08000270 	.word	0x08000270

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	08000270 	.word	0x08000270

080001c4 <main>:

#include <stdint.h>
#include "stm32l4xx.h"

int main(void)
{
 80001c4:	b480      	push	{r7}
 80001c6:	af00      	add	r7, sp, #0
   return (0);
 80001c8:	2300      	movs	r3, #0
}
 80001ca:	4618      	mov	r0, r3
 80001cc:	46bd      	mov	sp, r7
 80001ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001d2:	4770      	bx	lr

080001d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001d4:	480d      	ldr	r0, [pc, #52]	@ (800020c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001dc:	480c      	ldr	r0, [pc, #48]	@ (8000210 <LoopForever+0x6>)
  ldr r1, =_edata
 80001de:	490d      	ldr	r1, [pc, #52]	@ (8000214 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000218 <LoopForever+0xe>)
  movs r3, #0
 80001e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001e4:	e002      	b.n	80001ec <LoopCopyDataInit>

080001e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ea:	3304      	adds	r3, #4

080001ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001f0:	d3f9      	bcc.n	80001e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001f2:	4a0a      	ldr	r2, [pc, #40]	@ (800021c <LoopForever+0x12>)
  ldr r4, =_ebss
 80001f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000220 <LoopForever+0x16>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001f8:	e001      	b.n	80001fe <LoopFillZerobss>

080001fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001fc:	3204      	adds	r2, #4

080001fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000200:	d3fb      	bcc.n	80001fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000202:	f000 f811 	bl	8000228 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000206:	f7ff ffdd 	bl	80001c4 <main>

0800020a <LoopForever>:

LoopForever:
  b LoopForever
 800020a:	e7fe      	b.n	800020a <LoopForever>
  ldr   r0, =_estack
 800020c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000210:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000214:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000218:	08000290 	.word	0x08000290
  ldr r2, =_sbss
 800021c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000220:	2000001c 	.word	0x2000001c

08000224 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000224:	e7fe      	b.n	8000224 <ADC1_2_IRQHandler>
	...

08000228 <__libc_init_array>:
 8000228:	b570      	push	{r4, r5, r6, lr}
 800022a:	4d0d      	ldr	r5, [pc, #52]	@ (8000260 <__libc_init_array+0x38>)
 800022c:	4c0d      	ldr	r4, [pc, #52]	@ (8000264 <__libc_init_array+0x3c>)
 800022e:	1b64      	subs	r4, r4, r5
 8000230:	10a4      	asrs	r4, r4, #2
 8000232:	2600      	movs	r6, #0
 8000234:	42a6      	cmp	r6, r4
 8000236:	d109      	bne.n	800024c <__libc_init_array+0x24>
 8000238:	4d0b      	ldr	r5, [pc, #44]	@ (8000268 <__libc_init_array+0x40>)
 800023a:	4c0c      	ldr	r4, [pc, #48]	@ (800026c <__libc_init_array+0x44>)
 800023c:	f000 f818 	bl	8000270 <_init>
 8000240:	1b64      	subs	r4, r4, r5
 8000242:	10a4      	asrs	r4, r4, #2
 8000244:	2600      	movs	r6, #0
 8000246:	42a6      	cmp	r6, r4
 8000248:	d105      	bne.n	8000256 <__libc_init_array+0x2e>
 800024a:	bd70      	pop	{r4, r5, r6, pc}
 800024c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000250:	4798      	blx	r3
 8000252:	3601      	adds	r6, #1
 8000254:	e7ee      	b.n	8000234 <__libc_init_array+0xc>
 8000256:	f855 3b04 	ldr.w	r3, [r5], #4
 800025a:	4798      	blx	r3
 800025c:	3601      	adds	r6, #1
 800025e:	e7f2      	b.n	8000246 <__libc_init_array+0x1e>
 8000260:	08000288 	.word	0x08000288
 8000264:	08000288 	.word	0x08000288
 8000268:	08000288 	.word	0x08000288
 800026c:	0800028c 	.word	0x0800028c

08000270 <_init>:
 8000270:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000272:	bf00      	nop
 8000274:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000276:	bc08      	pop	{r3}
 8000278:	469e      	mov	lr, r3
 800027a:	4770      	bx	lr

0800027c <_fini>:
 800027c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800027e:	bf00      	nop
 8000280:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000282:	bc08      	pop	{r3}
 8000284:	469e      	mov	lr, r3
 8000286:	4770      	bx	lr
